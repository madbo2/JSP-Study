Connection Pool
 - 로딩 -> 연결 -> 접근 -> 실행 -> 해제 반복
 - Connection 객체를 생성하고 해제하는 동안 많은 시스템 자원이 소모된다.
 - 서버에 미리 Connection 객체를 설정해 놓은것
 - DB와 연결된 Connection 객체를 미리 만들어 놓고 Pool 속에 저장해두고 있다가
   요청이 있을 때 마다 가져다 사용하고 반환하는 기법

1. jar file 추가 -> Web-INF -> lib
 - Server 설치 폴더 안에 기본 제공 (현재 사용)
  - lib -> tomcat-dbcp.jar
 - 인터넷에서 다운받는 경우
  - commons.apache.org
  - DBCP, POOL , Collections

2. xml file
 - HTML이 가지고 있는 태그의 한계를 극복함으로써 여러가지 사용자지정의 태그를 만들 수 있는 파일
 - 웹이나 앱에서는 데이터 및 구조화된 문서들을 위한 표준
 - 주로 설정할 때 사용된다. ***

 - context.xml = Connection Pool의 설정 파일 (세부 설정 내역)
  - META-INF 안에 만든다.

 - name : 설정을 구별할 수 있는 이름
 - auth :
 - maxActive : 최대로 만들 connection 객체의 수
 - maxIdle : 기본적으로 생성할 객체의 수
 - maxWait : 기다리는 시간 (-1 무한대기)
 - whenExhaustedAction : Connection이 없을 때 어떻게 행동할지 
    0  - 에러발생
    1 - 객체가 생길때까지 기다렸다가 사용
    2 - 객체를 생성하여 사용

- web.xml - Server에 설정한것들을 알려주는 파일(설정list)
 - WEB-INF안에 만들면 된다..
