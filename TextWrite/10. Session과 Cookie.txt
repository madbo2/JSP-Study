영역과 속성
 - 영역(Scope) - 데이터를 공유할수 있는 범위...
  - 내장객체를 뜻한다....내장객체의 유지 범위에 따라 달라진다...
 - 속성(Attribute) - 데이터

 1.page영역 - pageContext
  - 해당 페이지에서만 사용되는 객체
  - service메소드가 실행되는 동안만 유지되는 객체...
 2.request영역 - request
  - 1:1페이지영역
  - 클라이언트의 요청이 처리되는 동안 유효한 범위...
  - 포워딩을 통하여 여러개의 페이지에서 유지될수 있다...
 3.session영역 - session (Login 처리)
  - 세션이 유지되는 동안 처리되는 범위(웹브라우저가 실행되는 동안...)
  - 프로젝트 하나당 한개의 session 객체가 생성된다..
 4.application영역 - application (방문자수 등)
  - 웹서버가 유지되는 동안 유효한 범위...
  - 웹서버당 하나만 생성된다...

================================================================

속성(attribute) 관련된 메소드...

Object getAttribute(String key)
 -  key값으로 등록되어 있는 속성을 object타입으로 반환받는 메소드

void setAttribute(String key,Object value)
 - 해당 영역에 key값의 이름으로 Object객체를 등록하는 메소드...

void removeAttribute(String key)
 - key값으로 등록되어 있는 속성을 제거

Enumeration getAttributeNames()
 - 해당 영역에 등록되어 있는 모든 속성들의 이름을 Enumeration타입으로 반환

============================================================================

세션과 쿠키
 - 관리되는 정보...다만 어디서 관리할것이냐

쿠키(Cookie)
 - 클라이언트 측에서 관리되는 정보
 - 보안에 취약하다...
 - 파일로 저장되기 때문에 브라우저가 종료되어도 생존기간동안 데이터가 유지된다..
 - 유효시간을 설정하여 내가 지정한 시간동안 유지시킬수 있다...
 - 중요한 정보는 세션
 - 브라우저마다 관리되는 장소가 다름. (쿠키가 별도)

이름 : 쿠키파일명
콘텐츠 : 쿠키파일 내용
만료일 까지 쿠키파일이 계속 저장됨.

세션(Session)
 - 서버측에서 관리되는 정보
 - 보안에 취약한 쿠키의 단점때문에 사용하기 시작했다..
 - 브라우저가 종료되면 데이터가 없어진다...
 - 내장객체 이므로 객체를 따로 만들지 않아도 된다...
 - 내가 지정한 시간동안 아무런 반응이 없으면 세션을 해제시킬수 있다... (인터넷 뱅킹 등)

==============================================================================================

 void invalidate()  -> request.getSession();
 - 세션무효화

 void MaxInactiveInterval(int interval)
 - 클라이언트가 활동을 안할때 몇초뒤에 연결이 해제될지 설정한다.


이름 : 쿠키파일명
콘텐츠 : 쿠키파일 내용
만료일 까지 쿠키파일이 계속 저장됨.


















